<% 
sub_list = @changes.find { |c| c.object_changes.empty? }&.additional_info&.dig('subjects_list') || [];
changes = @changes.reject do |change|
  case change.item_type
  when 'StashEngine::Resource'
    if change.object_changes.present? && (change.object_changes.keys & ['title', 'hold_for_peer_review', 'accepted_agreement', 'publication_date', 'tenant_id', 'display_readme']).empty?
      true
    elsif change.object_changes.empty? && change.additional_info&.dig('subjects_list') == sub_list
      true
    elsif change.object_changes.empty? && @changes.any? { |v| v.id > change.id && v.values_at(:whodunnit, :item_id, :item_type) == change.values_at(:whodunnit, :item_id, :item_type) && v.object_changes.empty? }
      true
    elsif @changes.any? { |v| v.id > change.id && v.values_at(:whodunnit, :item_id, :item_type) == change.values_at(:whodunnit, :item_id, :item_type) && v.object_changes.keys == change.object_changes.keys }
      true
    else
      false
    end
  else
    if @changes.any? { |v| v.id > change.id && v.values_at(:whodunnit, :item_id, :item_type) == change.values_at(:whodunnit, :item_id, :item_type)}
      true
    else
      false
    end
  end
end
partials = {
  'StashEngine::Resource': 'resource',
  'StashDatacite::Description': 'description',
  'StashEngine::Author': 'author',
  'StashEngine::ResourcePublication': 'publication',
  'StashDatacite::RelatedIdentifier': 'work',
  'StashDatacite::Contributor': 'contributor',
}
%>
<table class="c-lined-table" id="curation_table_<%= @resource.id %>">
  <thead>
    <tr>
      <th>User</th>
      <th>Timestamp</th>
      <th style="width: 65%;">Changes</th>
    </tr>
  </thead>
  <tbody>
    <% changes.map do |c| %>
      <% 
        first = @changes.find{ |i| i.item_type == c.item_type && i.item_id == c.item_id }.clone.freeze
        c.object = c.object.merge(c.object_changes.transform_values { |v| v[1] })
      %>
      <tr>
        <td><%= c.whodunnit.to_i.nonzero? ? "<a href=\"#{user_admin_profile_path(id: c.whodunnit)}\">#{c.user&.name}</a>".html_safe : 'System' %></td>
        <td><%= formatted_datetime(c.created_at) %></td>
        <td>
          <%= render partial: "stash_engine/admin_datasets/change_log/#{partials[c.item_type.to_sym]}", locals: {c: c, first: first}%>
        </td>
      </tr>
    <% end %>
  </tbody>
</table>

<script type="module">
  import HtmlDiff from '/htmldiff.min.js'
  document.querySelectorAll('.desc-changes').forEach(sec => {
    const original = document.getElementById(`desc_original${sec.dataset.id}`).innerHTML
    const latest = document.getElementById(`desc_latest${sec.dataset.id}`).innerHTML
    sec.innerHTML = HtmlDiff.execute(original, latest)
  })
  document.querySelectorAll('.desc-changes-button').forEach(button => button.addEventListener('click', () => {
    document.getElementById(button.getAttribute('aria-controls')).removeAttribute('hidden')
    button.setAttribute('aria-expanded', true)
  }))
</script>
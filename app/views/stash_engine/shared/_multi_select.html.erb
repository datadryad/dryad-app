<% # locals: field_name, label, id, selected, options %>
<% selected ||= [] %>
<% selected = [selected].flatten %>
<label for="multiselect-<%= id %>__input" id="multiselect-<%= id %>__label"><%= label %></label>
<div class="multiselect" id="multiselect-<%= id %>">
  <input type="button" aria-labelledby="multiselect-<%= id %>__label" class="c-input__select<%=selected.present? ? ' selected' : ''%>" id="multiselect-<%= id %>__input" value="<%= selected.map{|s| options.find{|a| a.last == s}&.first}.reject(&:blank?).join(', ') %>" aria-controls="multiselect-<%= id %>__list" aria-expanded="false"<%if local_assigns.key?(:describedby) %> aria-describedby="<%= describedby %>"<% end %>>
  <fieldset id="multiselect-<%= id %>__list" tabindex="-1" aria-labelledby="multiselect-<%= id %>__label" hidden>
    <% options.each do |opt| %>
      <label for="<%=id%>-<%=opt.last%>" tabindex="-1">
        <%= check_box_tag("#{field_name}[]", opt.last, selected.include?(opt.last), {id: "#{id}-#{opt.last}"}) %>
        <%= opt.first %>
      </label>
    <% end %>
  </fieldset>
  <span id="multiselect-<%= id %>__status" class="screen-reader-only" role="status"></span>
</div>
<script type="text/javascript">
  var multiSelect<%= id %> = () => {
    const itemId = 'multiselect-<%= id %>'
    const combobox = document.getElementById(itemId)
    const textbox = document.getElementById(itemId + '__input')
    const list = document.getElementById(itemId + '__list')

    new MultipleSelect(combobox, textbox, list)
  }
  multiSelect<%= id %>();
</script>
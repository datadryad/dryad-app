/* eslint-disable react/destructuring-assignment, react/prop-types, react/button-has-type, jsx-a11y/no-autofocus */
// TODO: these seem like nice, checks above, but would require quite a bit more work and understanding, could come back
// to them later with more experience. The button thing is ridiculous since it's not even a button but text that says "button."

import React from 'react';

import '@cdl-dryad/frictionless-components/lib/styles';
import {render} from '@cdl-dryad/frictionless-components/lib/render';
import {Report} from '@cdl-dryad/frictionless-components/lib/components/Report';

import classes from './ModalValidationReport.module.css';

class ModalValidationReport extends React.Component {
  componentDidMount() {
    const element = document.getElementById('validation_report');
    render(Report, JSON.parse(this.props.file.frictionless_report.report), element);
  }

  render() {
    return (
      <div>
        <dialog
          className="c-uploadmodal"
          style={{
            width: '60%',
            'max-width': '950px',
            'min-width': '220px',
            zIndex: '100149',
            top: '50%',
          }}
          open
        >
          <div className="c-uploadmodal__header">
            <h2 className="c-datasets-heading__heading o-heading__level1">
              Formatting Report:
              {this.props.file.sanitized_name}
            </h2>
            <button
              autoFocus
              className={classes.CloseButton}
              aria-label="close"
              type="button"
              onClick={(event) => this.props.clickedClose(event)}
            />
          </div>
          <div>
            This report has been generated by our tabular data checker. Please resolve the following formatting
            issues and re-upload the file:
          </div>
          <ol>
            <li>
              Manually correct the issues shown here in your local copy of the file.
            </li>
            <li>
              Close this dialog and click <em>Remove</em> in the Action column to delete the file.
            </li>
            <li>
              Re-upload the corrected file using the
              <em>Choose Files</em> or <em>Enter URLs</em> button.
            </li>
          </ol>
          <div id="validation_report" />
          <button onClick={(event) => this.props.clickedClose(event)}>Close</button>
        </dialog>
        <div className="backdrop" style={{zIndex: '100148'}} />
      </div>
    );
  }
}

export default ModalValidationReport;

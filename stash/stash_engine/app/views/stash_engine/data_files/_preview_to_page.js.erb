/*
  These functions have to do with choosing files and staging the list of files to the page before actually uploading.
  This preview stage before actually uploading creates a lot more work to hold and track files temporarily before they're
  actually uploaded.
*/

// Some other key/value objects may not keep their order, but maps do, these are files staged for upload in page
var fUploading = new Map();

// Fileobj and sanitized name bundled together which are staged into page before uploading
function specialFile(fileObj) {
  return {fileObj: fileObj, sanitized: file_sanitize(fileObj.name) };
}

// add event to require checking acceptance before uploading for page load
$(function () {
  confirmToUpload();
  $('#confirm_text_upload, #upload_all, #upload_tweaker_head').hide();
});

// add files to the processFiles map and also to the pending files display
function stageToPage(files) {
  for (let i = 0; i < files.length; i++) {
    console.log(files[i]);
    let k = generateQuickId();
    let v = specialFile(files[i]);
    $("#upload_list").append(outputLine(k, v));
    fUploading.set(k, v);
    reattachRemoveButtonEvents();
    $('#confirm_text_upload, #upload_all, #upload_tweaker_head').show();
  }
}

// add events for staging to page display before upload
function reattachRemoveButtonEvents() {
  $(".js-remove_link").unbind( "click" );
  $(".js-remove_link").click(function(event) {
    let row = $(event.target).closest("div.js-unuploaded");
    let myId = row.attr("id").slice(18);
    fUploading.delete(myId);
    row.remove();
  });
}

// The line output for staging each file that shows up in the page
function outputLine(identifier, specFile){
  return `
    <div class="c-upload__item js-unuploaded" id="not_uploaded_file_${identifier}">
      <div class="c-upload__filename">
        <span class="js-filename">${specFile["sanitized"]}</span>
        <span class="c-upload__filesize">${formatSizeUnits(specFile["fileObj"].size)}</span>
      </div>
      <div class="c-upload__action">
        <progress class="js-bar" style="display: none" id="progress_${identifier}" value="0"></progress>
        <button class="js-remove_link c-upload__button">Remove</button>
      </div>
      <input name="temp_id" value="${identifier}" type="hidden">
      <span class="spaced_text" style="display: none"><a href="#" id="up_button_${identifier}"
            data-id="${identifier}" class="js-upload-it">Upload</a></span>
    </div>`;
}

// This dragover is required for drop to work.  If we want to style it (such as an outline) we can style with this and dragleave
$("#upload_bg").on("dragover", function(event) {
  event.preventDefault();
  event.stopPropagation();
});

$("#upload_bg").on("drop", function(event) {
  event.preventDefault();
  event.stopPropagation();
  stageToPage(event.originalEvent.dataTransfer.files);
  // remove upload messages from last try
  $('#upload_message').removeClass();
  $('#upload_message').hide();
});

$("#upload_upload").on("change", function(event) {
  stageToPage(event.target.files);
  // remove upload messages from last try
  $('#upload_message').removeClass();
  $('#upload_message').hide();
});
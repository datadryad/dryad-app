// Overall process of uploading to S3
$('#upload_all').click( function(event) {
  $(".js-bar").show();
  $(".js-remove_link").hide();
  uploadListToS3();
  $('#upload_all').prop("disabled",true);
});

/* Do the upload using the promises in sequence and chaining so they happen sequentially */
function uploadListToS3() {
  let failArr = [];

  // Start off with a promise that always resolves, basically a blank promise
  var sequence = Promise.resolve();

  // Loop through each item and add the sequence of events required for each download
  fUploading.forEach(function(v, k) {
    // Add these promises to the end of the sequence chain
    sequence = sequence.then(function() {
      return evaporateIt(k, v);
    }).catch(function() {
      failArr.push(v["sanitized"]);
    });
  })

  // after all are uploaded
  sequence = sequence.then(function() {
    // after all are done
    $('#upload_all').prop("disabled",false);
    var fUploading = new Map();
    $("div.js-unuploaded").fadeOut("normal", function() {
      $(this).remove();
      $('#confirm_text_upload, #upload_all, #upload_tweaker_head').hide();
    });

    if (failArr.length === 0) {
      $('#upload_message').removeClass();
      $('#upload_message').addClass('c-upload__upload-complete-text');
      $('#upload_message').html('<p>Upload complete.</p>');
      $('#upload_message').show();
    }else{
      $('#upload_message').removeClass();
      $('#upload_message').addClass('c-upload__upload-error-text');
      $('#upload_message').html(`<p>The following files had errors while uploading, please upload them again:<br/>${failArr.join(", ")}</p>`);
      $('#upload_message').show();
    }
    failArr = [];

    // redraw the uploaded files table from Rails AJAX
    $.ajax({
      url: "<%= polymorphic_path(file, resource_id: resource.id, format: :js) %>",
      dataType: 'script'
    });
  }).catch(function() {
    console.log("Failed");
  });
}